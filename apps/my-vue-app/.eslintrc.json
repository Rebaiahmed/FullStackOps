{
  "root": true,
  "ignorePatterns": ["node_modules/", "dist/", "tmp/"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended"
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaVersion": 2020,
        "sourceType": "module",
        "project": ["tsconfig.*?.json"]
      },
      "plugins": ["@typescript-eslint"],
      "rules": {
        // your TS/JS rules here
      }
    },
    {
      "files": ["*.vue"],
      "extends": [
        "plugin:@typescript-eslint/recommended",
        "eslint:recommended"
      ],
      "parser": "vue-eslint-parser",
      "parserOptions": {
        "parser": "@typescript-eslint/parser",
        "ecmaVersion": 2020,
        "sourceType": "module",
        "extraFileExtensions": [".vue"]
      },
      "plugins": ["vue", "@typescript-eslint"],
      "rules": {
        "vue/multi-word-component-names": "off",
         "vue/multi-word-component-names": "off", // allow single-word component names if you want
  "vue/html-indent": ["error", 2],          // enforce 2 spaces indentation in template
  "vue/max-attributes-per-line": ["error", {
    "singleline": 3,
    "multiline": 1
  }],                                         // limit max attributes per line
  "vue/no-unused-components": "warn",        // warn if component imported but not used
  "vue/no-unused-vars": "error",              // error for unused variables in templates
  "vue/require-default-prop": "off",         // allow props to be optional without defaults
  "vue/require-explicit-emits": "error",     // enforce explicit emits declarations
  "vue/valid-v-slot": "error",                // validate slot syntax

  // TypeScript specific
  "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
  "@typescript-eslint/explicit-function-return-type": "off",

  // Stylistic preferences
  "quotes": ["error", "double"],
  "semi": ["error", "always"],
  "indent": ["error", 2],
  "comma-dangle": ["error", "never"]
      }
    }
  ]
}
